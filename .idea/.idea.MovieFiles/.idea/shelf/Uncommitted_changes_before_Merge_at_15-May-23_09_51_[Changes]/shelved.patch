Index: Api/Client/ClientServicesExtensions.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Microsoft.Extensions.DependencyInjection;\r\nusing MovieFiles.Api.Client.Services;\r\n\r\nnamespace MovieFiles.Infrastructure\r\n{\r\n    public static class ClientServicesExtensions\r\n    {\r\n        public static IServiceCollection AddMovieFilesClient(this IServiceCollection services,string apiUrl, string appKey)\r\n        {\r\n            \r\n            services.AddTransient<IRatingService>(provider => new RatingService(apiUrl, appKey));\r\n            \r\n            return services;\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Api/Client/ClientServicesExtensions.cs b/Api/Client/ClientServicesExtensions.cs
--- a/Api/Client/ClientServicesExtensions.cs	(revision 1df4d7ac43f02672275bee96a7d2f7c1ca9d15b0)
+++ b/Api/Client/ClientServicesExtensions.cs	(date 1684137039266)
@@ -7,9 +7,9 @@
     {
         public static IServiceCollection AddMovieFilesClient(this IServiceCollection services,string apiUrl, string appKey)
         {
-            
             services.AddTransient<IRatingService>(provider => new RatingService(apiUrl, appKey));
-            
+            services.AddTransient<IMoviesService>(provider => new MoviesService(apiUrl, appKey));
+
             return services;
         }
 
Index: Ui/Http/Pages/Index.razor
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@page \"/\"\r\n\r\n\r\n\r\n<PageTitle>Movies</PageTitle>\r\n\r\n<div class=\"body\">\r\n    <h1>Movies</h1>\r\n    <div class=\"movies-container\">\r\n        <div class=\"box\">\r\n            <div class=\"box-img\">\r\n                <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.pinimg.com%2F736x%2F83%2F84%2F96%2F838496bfe159d838e7bd39f844742380.jpg&f=1&nofb=1&ipt=e6e8250618f241cefa3857742f4858903cc6d2eba81e83d7916f924f6791bb11&ipo=images\" alt=\"Example Image\">\r\n            </div>\r\n            <div class=\"rating-box\">\r\n                <img class=\"star\" src=\"svgs/star.svg\">\r\n                <div>7.5</div>\r\n            </div>\r\n            <h5>John Wick</h5>\r\n        </div>\r\n        <div class=\"box\">\r\n            <div class=\"box-img\">\r\n                <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.pinimg.com%2Foriginals%2Fb3%2F87%2F9a%2Fb3879a322f8317b4a48d90ebc5e8988a.jpg&f=1&nofb=1&ipt=9a27048791da30187d667949892124fcb491dffc8d695979fb11bf70e35c11f5&ipo=images\" alt=\"Example Image\">\r\n            </div>\r\n            <div class=\"rating-box\">\r\n                            <img class=\"star\" src=\"svgs/star.svg\">\r\n                            <div>7.5</div>\r\n                        </div>\r\n            <h5>Pulp Fiction</h5>\r\n        </div>\r\n        <div class=\"box\">\r\n            <div class=\"box-img\">\r\n                <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpicfiles.alphacoders.com%2F168%2Fthumb-1920-168042.jpg&f=1&nofb=1&ipt=b1097abafed28406b90a6c32d45a520269016c6d6a1f1aefda3ec8882b8c4c51&ipo=images\" alt=\"Example Image\">\r\n            </div>\r\n            <div class=\"rating-box\">\r\n                            <img class=\"star\" src=\"svgs/star.svg\">\r\n                            <div>7.5</div>\r\n                        </div>\r\n            <h5>Back to the Future</h5>\r\n        </div>\r\n        <div class=\"box\">\r\n            <div class=\"box-img\">\r\n                <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.redd.it%2Ft21pil9q1k661.jpg&f=1&nofb=1&ipt=1d8cd38d3cbefc5f7936ef6e7d49978d462e187ac3fd043cc73f8d5f6f84e003&ipo=images\" alt=\"Example Image\">\r\n            </div>\r\n            <div class=\"rating-box\">\r\n                <img class=\"star\" src=\"svgs/star.svg\">\r\n                <div>7.5</div>\r\n            </div>\r\n            <h5>Coming to America 2</h5>\r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n\r\n\r\n    </div>\r\n</div>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Ui/Http/Pages/Index.razor b/Ui/Http/Pages/Index.razor
--- a/Ui/Http/Pages/Index.razor	(revision 1df4d7ac43f02672275bee96a7d2f7c1ca9d15b0)
+++ b/Ui/Http/Pages/Index.razor	(date 1684136965282)
@@ -1,4 +1,10 @@
 @page "/"
+@using MovieFiles.Api.Client.Models
+@using MovieFiles.Api.Client.Services
+@inject IRatingService RatingService
+@using Microsoft.AspNetCore.Mvc.ModelBinding
+
+@inject IMoviesService MoviesService
 
 
 
@@ -22,9 +28,9 @@
                 <img src="https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.pinimg.com%2Foriginals%2Fb3%2F87%2F9a%2Fb3879a322f8317b4a48d90ebc5e8988a.jpg&f=1&nofb=1&ipt=9a27048791da30187d667949892124fcb491dffc8d695979fb11bf70e35c11f5&ipo=images" alt="Example Image">
             </div>
             <div class="rating-box">
-                            <img class="star" src="svgs/star.svg">
-                            <div>7.5</div>
-                        </div>
+                <img class="star" src="svgs/star.svg">
+                <div>7.5</div>
+            </div>
             <h5>Pulp Fiction</h5>
         </div>
         <div class="box">
@@ -32,9 +38,9 @@
                 <img src="https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpicfiles.alphacoders.com%2F168%2Fthumb-1920-168042.jpg&f=1&nofb=1&ipt=b1097abafed28406b90a6c32d45a520269016c6d6a1f1aefda3ec8882b8c4c51&ipo=images" alt="Example Image">
             </div>
             <div class="rating-box">
-                            <img class="star" src="svgs/star.svg">
-                            <div>7.5</div>
-                        </div>
+                <img class="star" src="svgs/star.svg">
+                <div>7.5</div>
+            </div>
             <h5>Back to the Future</h5>
         </div>
         <div class="box">
@@ -54,4 +60,14 @@
 
 
     </div>
-</div>
\ No newline at end of file
+</div>
+
+@code{
+    public MovieList Movies { get; set; }
+    
+    protected override async Task OnInitializedAsync()
+    {
+        await RatingService.GetAverageRating(new Guid("b1097aba-fed2-8406-b90a-6c32d45a5202"));
+         // await MoviesService.GetFavoriteMoviesAsync(1);
+    }
+}
\ No newline at end of file
Index: Api/Client/FunctionsAPI.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"swagger\": \"2.0\",\r\n  \"info\": {\r\n    \"title\": \"OpenAPI Document on Azure Functions\",\r\n    \"version\": \"1.0.0\"\r\n  },\r\n  \"host\": \"localhost:7008\",\r\n  \"basePath\": \"/api\",\r\n  \"schemes\": [\r\n    \"http\"\r\n  ],\r\n  \"paths\": {\r\n    \"/Function1\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"name\"\r\n        ],\r\n        \"operationId\": \"Run\",\r\n        \"produces\": [\r\n          \"text/plain\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"query\",\r\n            \"name\": \"name\",\r\n            \"description\": \"The **Name** parameter\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"The OK response\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"security\": [\r\n          {\r\n            \"function_key\": []\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    \"/ratings/user/{userId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Ratings\"\r\n        ],\r\n        \"operationId\": \"GetRatingsByUser\",\r\n        \"produces\": [\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"path\",\r\n            \"name\": \"userId\",\r\n            \"required\": true,\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          {\r\n            \"in\": \"header\",\r\n            \"name\": \"x-functions-key\",\r\n            \"description\": \"The function key\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Payload of Array of Rating\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/rating\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/ratings/movie/{movieId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Ratings\"\r\n        ],\r\n        \"operationId\": \"GetRatingsForMovie\",\r\n        \"produces\": [\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"path\",\r\n            \"name\": \"movieId\",\r\n            \"required\": true,\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          {\r\n            \"in\": \"header\",\r\n            \"name\": \"x-functions-key\",\r\n            \"description\": \"The function key\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Payload of Array of Rating\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/rating\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/rating/{userId}/{movieId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Ratings\"\r\n        ],\r\n        \"operationId\": \"GetRating\",\r\n        \"produces\": [\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"path\",\r\n            \"name\": \"userId\",\r\n            \"required\": true,\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          {\r\n            \"in\": \"path\",\r\n            \"name\": \"movieId\",\r\n            \"required\": true,\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          {\r\n            \"in\": \"header\",\r\n            \"name\": \"x-functions-key\",\r\n            \"description\": \"The function key\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Payload of Rating\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/rating\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/ratings\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Ratings\"\r\n        ],\r\n        \"operationId\": \"AddRating\",\r\n        \"consumes\": [\r\n          \"application/json\"\r\n        ],\r\n        \"produces\": [\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"header\",\r\n            \"name\": \"x-functions-key\",\r\n            \"description\": \"The function key\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"in\": \"body\",\r\n            \"name\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/rating\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Payload of Rating\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/rating\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/rating/average/{movieId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Ratings\"\r\n        ],\r\n        \"operationId\": \"GetAverageRating\",\r\n        \"produces\": [\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"path\",\r\n            \"name\": \"movieId\",\r\n            \"required\": true,\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          {\r\n            \"in\": \"header\",\r\n            \"name\": \"x-functions-key\",\r\n            \"description\": \"The function key\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Payload of Double\",\r\n            \"schema\": {\r\n              \"format\": \"double\",\r\n              \"type\": \"number\"\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Payload of Void\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/void\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"definitions\": {\r\n    \"rating\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"userId\": {\r\n          \"format\": \"uuid\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"movieId\": {\r\n          \"format\": \"uuid\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"ratingValue\": {\r\n          \"format\": \"int32\",\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"void\": {\r\n      \"type\": \"object\"\r\n    }\r\n  },\r\n  \"securityDefinitions\": {\r\n    \"function_key\": {\r\n      \"type\": \"apiKey\",\r\n      \"name\": \"code\",\r\n      \"in\": \"query\"\r\n    }\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Api/Client/FunctionsAPI.json b/Api/Client/FunctionsAPI.json
--- a/Api/Client/FunctionsAPI.json	(revision 1df4d7ac43f02672275bee96a7d2f7c1ca9d15b0)
+++ b/Api/Client/FunctionsAPI.json	(date 1684134243280)
@@ -4,10 +4,10 @@
     "title": "OpenAPI Document on Azure Functions",
     "version": "1.0.0"
   },
-  "host": "localhost:7008",
+  "host": "moviefilesfunctions.azurewebsites.net",
   "basePath": "/api",
   "schemes": [
-    "http"
+    "https"
   ],
   "paths": {
     "/Function1": {
@@ -38,11 +38,45 @@
         },
         "security": [
           {
-            "function_key": []
+            "function_key": [ ]
           }
         ]
       }
     },
+    "/movies/popular": {
+      "get": {
+        "tags": [
+          "Movies"
+        ],
+        "operationId": "GetPopularMovies",
+        "produces": [
+          "application/json"
+        ],
+        "parameters": [
+          {
+            "in": "path",
+            "name": "page",
+            "type": "integer",
+            "format": "int32"
+          },
+          {
+            "in": "header",
+            "name": "x-functions-key",
+            "description": "The function key",
+            "required": true,
+            "type": "string"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "The OK response",
+            "schema": {
+              "$ref": "#/definitions/movieList"
+            }
+          }
+        }
+      }
+    },
     "/ratings/user/{userId}": {
       "get": {
         "tags": [
@@ -243,6 +277,84 @@
     }
   },
   "definitions": {
+    "movie": {
+      "type": "object",
+      "properties": {
+        "posterPath": {
+          "type": "string"
+        },
+        "adult": {
+          "type": "boolean"
+        },
+        "overview": {
+          "type": "string"
+        },
+        "releaseDate": {
+          "type": "string"
+        },
+        "genreIds": {
+          "type": "array",
+          "items": {
+            "format": "int32",
+            "type": "integer"
+          }
+        },
+        "id": {
+          "format": "int32",
+          "type": "integer"
+        },
+        "originalTitle": {
+          "type": "string"
+        },
+        "originalLanguage": {
+          "type": "string"
+        },
+        "title": {
+          "type": "string"
+        },
+        "backdropPath": {
+          "type": "string"
+        },
+        "popularity": {
+          "format": "float",
+          "type": "number"
+        },
+        "voteCount": {
+          "format": "int32",
+          "type": "integer"
+        },
+        "video": {
+          "type": "boolean"
+        },
+        "voteAverage": {
+          "format": "float",
+          "type": "number"
+        }
+      }
+    },
+    "movieList": {
+      "type": "object",
+      "properties": {
+        "page": {
+          "format": "int32",
+          "type": "integer"
+        },
+        "results": {
+          "type": "array",
+          "items": {
+            "$ref": "#/definitions/movie"
+          }
+        },
+        "total_results": {
+          "format": "int32",
+          "type": "integer"
+        },
+        "totalPages": {
+          "format": "int32",
+          "type": "integer"
+        }
+      }
+    },
     "rating": {
       "type": "object",
       "properties": {
Index: Api/Client/Models/MovieList.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Api/Client/Models/MovieList.cs b/Api/Client/Models/MovieList.cs
new file mode 100644
--- /dev/null	(date 1684134501064)
+++ b/Api/Client/Models/MovieList.cs	(date 1684134501064)
@@ -0,0 +1,8 @@
+namespace MovieFiles.Api.Client.Models;
+
+public class MovieList
+{
+    public int? Page {get;set;}
+    public List<Movie> Results {get;set;}
+    public int? TotalPages {get;set;}
+}
\ No newline at end of file
Index: Api/Client/Mappers/ClientToUi.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>namespace MovieFiles.Api.Client.Mappers\r\n{\r\n    internal class ClientToUi\r\n    {\r\n        internal static Models.Rating Map(Rating rating)\r\n        {\r\n            if (rating == null)\r\n            {\r\n                return null;\r\n            }\r\n            return new()\r\n            {\r\n                MovieId = (Guid)rating.MovieId,\r\n                UserId = (Guid)rating.UserId,\r\n                RatingValue = (int)rating.RatingValue\r\n            };\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Api/Client/Mappers/ClientToUi.cs b/Api/Client/Mappers/ClientToUi.cs
--- a/Api/Client/Mappers/ClientToUi.cs	(revision 1df4d7ac43f02672275bee96a7d2f7c1ca9d15b0)
+++ b/Api/Client/Mappers/ClientToUi.cs	(date 1684134331707)
@@ -15,5 +15,29 @@
                 RatingValue = (int)rating.RatingValue
             };
         }
+        internal static Models.Movie Map(Movie movie)
+        {
+            if (movie == null)
+            {
+                return null;
+            }
+            return new()
+            {
+                PosterPath = movie.PosterPath,
+            };
+        }
+        internal static Models.MovieList Map(MovieList movieList)
+        {
+            if (movieList == null)
+            {
+                return null;
+            }
+            return new()
+            {
+                Page = movieList.Page,
+                Results = movieList.Results.Select(Map).ToList(),
+                TotalPages = movieList.TotalPages
+            };
+        }
     }
 }
Index: Api/Client/Services/IMoviesService.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Api/Client/Services/IMoviesService.cs b/Api/Client/Services/IMoviesService.cs
new file mode 100644
--- /dev/null	(date 1684135189750)
+++ b/Api/Client/Services/IMoviesService.cs	(date 1684135189750)
@@ -0,0 +1,8 @@
+
+
+namespace MovieFiles.Api.Client.Services;
+
+public interface IMoviesService
+{
+    Task<Models.MovieList> GetFavoriteMoviesAsync(int page);
+}
\ No newline at end of file
Index: Api/Client/Services/MoviesService.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Api/Client/Services/MoviesService.cs b/Api/Client/Services/MoviesService.cs
new file mode 100644
--- /dev/null	(date 1684136593644)
+++ b/Api/Client/Services/MoviesService.cs	(date 1684136593644)
@@ -0,0 +1,22 @@
+using MovieFiles.Api.Client.Mappers;
+using MovieFiles.Api.Client.Models;
+
+namespace MovieFiles.Api.Client.Services;
+
+public class MoviesService: IMoviesService
+{
+    private readonly MovieFilesFunctions _client;
+    private readonly string _functionAppKey;
+    public MoviesService(string httpUrl, string functionAppKey)
+    {
+        _client = new MovieFilesFunctions(new HttpClient { BaseAddress = new Uri(httpUrl) });
+        _client.BaseUrl = httpUrl;
+        _functionAppKey = functionAppKey;
+    }
+    
+    public async Task<Models.MovieList> GetFavoriteMoviesAsync(int page)
+    {
+        var response = await _client.GetPopularMoviesAsync(page, _functionAppKey);
+        return ClientToUi.Map(response);
+    }
+}
\ No newline at end of file
Index: Api/Client/Models/Movie.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Api/Client/Models/Movie.cs b/Api/Client/Models/Movie.cs
new file mode 100644
--- /dev/null	(date 1684129052304)
+++ b/Api/Client/Models/Movie.cs	(date 1684129052304)
@@ -0,0 +1,9 @@
+namespace MovieFiles.Api.Client.Models;
+
+public class Movie
+{
+    public string? PosterPath { get; set; }
+    public string OriginalTitle { get; set; }
+    public string Title { set; get; }
+    public float VoteAverage { get; set; } // might be needed to remove
+}
\ No newline at end of file
