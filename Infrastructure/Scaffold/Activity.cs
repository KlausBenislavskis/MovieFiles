// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;

#pragma warning disable 1573, 1591
#nullable enable

namespace MovieFiles.Infrastructure.Scaffold
{
	[Table("activities")]
	public class Activity
	{
		[Column("activity_id"     , IsPrimaryKey = true , IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int      ActivityId     { get; set; } // integer
		[Column("user_id"                                                                                            )] public Guid     UserId         { get; set; } // uuid
		[Column("followed_user_id"                                                                                   )] public Guid?    FollowedUserId { get; set; } // uuid
		[Column("activity_type"   , CanBeNull    = false                                                             )] public string   ActivityType   { get; set; } = null!; // character varying(255)
		[Column("movie_id"                                                                                           )] public int?     MovieId        { get; set; } // integer
		[Column("rating_value"                                                                                       )] public int?     RatingValue    { get; set; } // integer
		[Column("comment_text"                                                                                       )] public string?  CommentText    { get; set; } // text
		[Column("timestamp"                                                                                          )] public DateTime Timestamp      { get; set; } // timestamp (6) without time zone

		#region Associations
		/// <summary>
		/// activities_followed_user_id_fkey
		/// </summary>
		[Association(ThisKey = nameof(FollowedUserId), OtherKey = nameof(Scaffold.User.UserId))]
		public User? FollowedUser { get; set; }

		/// <summary>
		/// activities_user_id_fkey
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(UserId), OtherKey = nameof(Scaffold.User.UserId))]
		public User User { get; set; } = null!;
		#endregion
	}
}
