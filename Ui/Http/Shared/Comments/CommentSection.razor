@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ICommentService CommentService

<AuthorizeView>
    <Authorized>
        <CommentForm OnCommentSubmitted="AddComment"/>
    </Authorized>
</AuthorizeView>
<div class="mx-5">
    @foreach (var comment in Comments)
    {
        <CommentDisplay Comment="@comment"/>
    }
</div>

@code {

    [Parameter]
    public int MovieId { get; set; }

    private List<Comment> Comments { get; set; } = new List<Comment>();

    protected override async Task OnInitializedAsync()
    {
        Comments = await CommentService.GetComments(MovieId, 1);
    }

    private async Task AddComment(Comment comment)
    {
        var user = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userId = user.User.GetUserId();
        string username = user?.User?.Identity?.Name;
        if (username == null)
        {
            username = user?.User?.FindFirst(c => c.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname")?.Value;
        }
        comment.Author = username;

        await CommentService.Comment(comment, MovieId, userId);
        Comments.Add(comment);
    }

}