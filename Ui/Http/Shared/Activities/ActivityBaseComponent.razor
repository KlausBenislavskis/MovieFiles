@using MovieFiles.Core.Models
@using MovieFiles.Core.Models.Activity
@inject IMovieDetailsService MovieDetailsService
@inject NavigationManager NavManager

<div class="card mb-2 d-flex flex-row" @onclick="GoToMovieDetail">
    <div class="col-3">
        @if (!string.IsNullOrEmpty(Movie?.PosterPath))
        {
            <img class="card-img-top activity-image" src="https://image.tmdb.org/t/p/w500/@Movie?.PosterPath" alt="Activity Image">
        }
        else
        {
            <div class="activity-card"></div>
        }
    </div>

    @if (Movie != null)
    {
        <div class="card-body col-9">
            <h5 class="card-title">@Activity.Username</h5>
            <h6 class="card-subtitle mb-2 text-muted">@Activity.Created.ToShortDateString()</h6>
            <p>@Movie.OriginalTitle</p>
            @ChildContent
        </div>
    }
    else
    {
        <div class="card-body col-10">
            <!-- Empty div for placeholder -->
            <div style="height: 270px;"></div>
        </div>
    }
</div>


@code {
    [Parameter]
    public BaseActivity Activity { get; set; }
    public Core.Models.Movie Movie { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Movie = await MovieDetailsService.GetMovieDetailsAsync(Activity.MovieId);

            StateHasChanged();
        }
    }
    //protected override async Task OnParametersSetAsync()
    //{

    //}

    private void GoToMovieDetail()
    {
        NavManager.NavigateTo($"/movie/{Movie.Id}");
    }
}
