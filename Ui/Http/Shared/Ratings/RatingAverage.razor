@using MovieFiles.Api.Client.Services;
@using System.Globalization
@using MovieFiles.Ui.Http.Pages
@using System.Globalization;
@inject IRatingService RatingService
@inject AuthenticationStateProvider AuthenticationStateProvider


@if (AverageRating.HasValue)
{
    <div class="@StyleClass.Rating">
        <h4 class="@StyleClass.RatingItem">@AverageRating.Value.ToString("0.0", CultureInfo.InvariantCulture)</h4>
        <img class="@StyleClass.StarItem" src="svgs/star.svg">
    </div>
}
else
{
        <div class="rating">
            <p class="noRating">No ratings available.</p>
        </div>
}

@code {
    [Parameter]
    public int MovieId { get; set; }
    public double? AverageRating { get; set; }
    public bool IsFirstRender = true;

    [Parameter]
    public MovieFiles.Ui.Http.Pages.MovieDetails.StyleClass StyleClass { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (IsFirstRender)
        {
            return;
        }
        AverageRating = null;
        AverageRating = await RatingService.GetAverageRating(MovieId);
    }
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            AverageRating = null;
            AverageRating = await RatingService.GetAverageRating(MovieId);
            IsFirstRender = false;
            StateHasChanged();
        }
    }

}
