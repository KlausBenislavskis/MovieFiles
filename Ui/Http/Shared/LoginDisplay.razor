@using MovieFiles.Ui.Http.Data;
@using MovieFiles.Ui.Http.Helpers;
@using MovieFiles.Ui.Http.Data;
@inject IUserResolver UserResolver

<style>
            :root{
                --gradiant: linear-gradient(45deg, #631abc,#631abc, #8534e7, #8534e7,#8534e7,#631abc,  #631abc);
            }
            .login-button{
                background-image: var(--gradiant);
                color: white;
                border-radius: 5px;
                padding: 10px;
                text-decoration: none;
                font-weight: bold;
                background-size: 300%;
                background-position: left;
                transition: background-position 0.5s;
            }
            .login-button:hover{
                background-position: right;
                color: white;
            }
            
            
            #login-options{
                display: flex;
                gap: 1rem;
                align-items: center;
                flex-direction: column;
            }
            
            #loggedInIcon{
                width: 50px;
                height: 50px;
                background-image: var(--gradiant);
                 background-position: left;
                background-size: 300%;
                transition: background-position 0.5s;
                border-radius: 50%;
            }
            #loggedInIcon:hover{
                background-position: right;
                color: white;
                cursor: pointer;
            }
            .icon{
                width: 100%;
                height: 100%;
            }
            
            .drop-down-menu{
                margin-top: 62px;
                width: 200px;
                align-items: center;
                flex-direction: column;
                position: absolute;
                z-index: 1;
                background-color: #631abc;
                border-radius: 5px;
                display: @(showDropdown ? "flex" : "none");
                transition: height 0.5s;
            }
           
           
            .drop-down-menu p{
                color: white;
                font-weight: bold;
                margin: 0;
                padding: 10px;
                width: 100%;
                display: @(showDropdown ? "block" : "none");
                text-align: center;
                border-bottom: 1px solid gray;
            }
            .drop-down-menu a{
                color: white;
                text-decoration: none;
                padding: 10px;
                width: 100%;
                display: @(showDropdown ? "block" : "none");
                text-align: center;
            }
            .drop-down-menu a:hover{
                opacity: 0.5;
                background: #5d19b0;
            }
</style>

<AuthorizeView>
    <Authorized>
        <div id="login-options">
            <a id="loggedInIcon" onclick="@ToggleHeight">
                <img class="icon" src="svgs/personIcon.svg" alt="person icon"/>
            </a>

            <div class="drop-down-menu">
                <p>Hello, @context.User.Identity?.Name</p>
                @* <a href="MicrosoftIdentity/Account/SignOut">Add to follow</a> *@
                <a href="follow">Following</a>
                <a href="MicrosoftIdentity/Account/SignOut">Log out</a>
            </div>

        </div>
    </Authorized>
    <NotAuthorized>
        <a class="login-button" href="MicrosoftIdentity/Account/SignIn">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    bool showDropdown = false;

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            {
                await UserResolver.ResolveUser();
            }
        }
    }

    private void ToggleHeight()
    {
        showDropdown = !showDropdown;
    }

}