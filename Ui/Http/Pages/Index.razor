@page "/"
@using MovieFiles.Ui.Http.Shared.Movies
@inject IMoviesService MoviesService

<AuthorizeView>
    <Authorized>
        <div class="tabs">
            @{
                string discover = "discover";
                string following = "following";
            }
            <button class="tab-button @(ActiveTab == discover ? "active" : "")" @onclick="() => SwitchTab(discover)">Discover</button>
            <button class="tab-button @(ActiveTab == following ? "active" : "")" @onclick="() => SwitchTab(following)">Following</button>
        </div>

        @if (ActiveTab == discover)
        {
            <div class="body">
                <FeaturedMovies MovieGetter=@featuredMoviesGetter()></FeaturedMovies>
            </div>
        }
        else if (ActiveTab == following)
        {
            <div class="body">
                <MovieFiles.Ui.Http.Shared.Activities.ActivityList></MovieFiles.Ui.Http.Shared.Activities.ActivityList>
            </div>
        }
    </Authorized>

    <NotAuthorized>
        <div class="body">
            <FeaturedMovies MovieGetter=@featuredMoviesGetter()></FeaturedMovies>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {

    private string ActiveTab { get; set; } = "discover";

    private void SwitchTab(string tabName)
    {
        ActiveTab = tabName;
    }

    protected Func<int, Task<MovieList>> featuredMoviesGetter()
    {
        Func<int, Task<MovieList>> myFunc = page => MoviesService.GetPopularMoviesAsync(page);
        return myFunc;
    }
}
